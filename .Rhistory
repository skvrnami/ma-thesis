plot(gvisSankey(sankey_cz9296minorwpo, from="source", to="target", weight="candidates", options = list(height=615, width=1000)))
sankey_cz9296allwpo <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/output/sankey_cz9296allwpo.csv")
View(sankey_cz9296allwpo)
plot(gvisSankey(sankey_cz9296allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=1000)))
sankey_cz9296minorwpo <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/output/sankey_cz9296minorwpo.csv")
View(sankey_cz9296minorwpo)
plot(gvisSankey(sankey_cz9296minorwpo, from="source", to="target", weight="candidates", options = list(height=615, width=1000)))
cze1998_cl <- read.csv("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/cze/cze1998_cl.csv", sep=";")
View(cze1998_cl)
cz9698_1 <- listsCompare(cze1996, cze1998_cl, 2)
listsCompare(cze1996, cze1998_cl, 3)
listsCompare(cze1996, cze1998_cl, 1)
cz9698_2 <- listsCompare(cze1996, cze1998_cl, 3)
cz9698 <- rbind(cz9698_1, cz9698_2)
write.csv(cz9698, "cz9698.csv")
table(cz9698$party1, cz9698$party2)
View(cz9698)
View(cze1996)
sankey_cz9698all <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/output/sankey_cz9698all.csv")
View(sankey_cz9698all)
plot(gvisSankey(sankey_cz9698all, from="source", to="target", weight="candidates", options = list(height=615, width=800)))
sankey_cz9698minorwpo <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/output/sankey_cz9698minorwpo.csv")
View(sankey_cz9698minorwpo)
plot(gvisSankey(sankey_cz9698minorwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800)))
library(devtools)
install_github('slidify', 'ramnathv')
sk2012 <- read.csv("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/sk/sk2012.csv", sep=";")
View(sk2012)
sk2016 <- read.csv("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/sk/sk2016.csv", sep=";")
View(sk2016)
sk1216_1 <- listsCompare(sk2012, sk2016, 4)
View(listsCompare())
View(listsCompare)
function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span & list1$residency == list2$residency[comp]
# TO DO: possibility to control for election district?
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
data.frame(again, party1, party2)
#  print("Candidates running again:")
#  print(again[!is.na(again)])
#  print(table(party1, party2))
}
sk1216_1_2 <- listsCompare(sk2012, sk2016, 4)
sk1216_2_2 <- listsCompare(sk2012, sk2016, 3)
sk1216_3_2 <- listsCompare(sk2012, sk2016, 5)
View(sk1216_3_2)
View(sk1216_2_2)
View(sk1216_1_2)
View(sk1216_3_2)
listsCompare(sk2012, sk2016, 6)
listsCompare(sk2012, sk2016, 2)
listsCompare(sk2012, sk2016, 1)
listsCompare(sk2012, sk2016, 10)
listsCompare(sk2012, sk2016, 7)
listsCompare(sk2012, sk2016, 8)
listsCompare(sk2012, sk2016, 9)
listsCompare(sk2012, sk2016, 11)
sk1216 <- rbind(sk1216_1_2, sk1216_2_2)
table(sk1216$party1, sk1216$party2)
library(googleVis)
sankey_sk1216allwpo <- read.csv("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/output/sankey_sk1216allwpo.csv", sep=";")
View(sankey_sk1216allwpo)
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800)))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['#a61d4c']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['#000000']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colorMode: ['gradient']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colorMode: ['target']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colorMode: 'target'}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ["black""]}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ["black"]}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['black']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800)))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey={node: {fill: '#000000'}})))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {fill: '#000000'}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colorMode: 'target'}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {width: 2}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {width: source}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colorMode: source}}")))
?gvisSankey
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, colorMode=source)))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, colorMode="source")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {color: {fill: '#000000'}}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {fill: '#ff0000', '#000000' }}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {fill: '#ff0000'}}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {fill: ['#ff0000', '#000000']}}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['#ff0000', '#000000']}}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['#ff0000', '#000000']}})))
)
))
}
}}}}
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['#ff0000', '#000000']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colors: ['#ff0000', '#000000']}}")))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {colorMode: ['source']}}")))
colors_node <- c('yellow', 'lightblue', 'red', 'black', 'brown')
colors_node_array <- paste0("[", paste0("'", colors_node,"'", collapse = ','), "]")
opts <- paste0("{
node: { colors: ", colors_node_array ," }
}" )
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey=opts)))
opts <- paste0("{
node: { colorMode: 'source', colors: ", colors_node_array ," }
}" )
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey=opts)))
plot(gvisSankey(sankey_sk1216allwpo, from="source", to="target", weight="candidates", options = list(height=615, width=800, sankey="{node: {width: 2}}")))
write.csv(sk1216, "sk1216.csv")
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span & list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
order1 <- na.omit(list1$orderList[TF==TRUE])
order2 <- na.omit(list2$orderList[comp[TF==TRUE]])
data.frame(again, party1, party2, order1, order2)
}
sk1216_1 <- listsCompareSK(sk2012, sk2016, 4)
sk1216_1 <- listsCompareSK(sk2012, sk2016, 4)
class(sk2012$residency)
class(sk2016$residency)
sk2016$residency <- as.character(sk2016$residency)
sk2012$residency <- as.character(sk2012$residency)
sk1216_1 <- listsCompareSK(sk2012, sk2016, 4)
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span
# & list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
order1 <- na.omit(list1$orderList[TF==TRUE])
order2 <- na.omit(list2$orderList[comp[TF==TRUE]])
data.frame(again, party1, party2, order1, order2)
}
sk1216_1 <- listsCompareSK(sk2012, sk2016, 4)
sk2012$orderList <- sk2012$listOrder
sk1216_1 <- listsCompareSK(sk2012, sk2016, 4)
sk1216_2 <- listsCompareSK(sk2012, sk2016, 3)
sk1216_3 <- listsCompareSK(sk2012, sk2016, 5)
svk1216 <- rbind(sk1216_1, sk1216_2)
svk1216
write.csv(svk1216, "svk1216.csv")
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span
& list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
order1 <- na.omit(list1$listOrder[TF==TRUE])
order2 <- na.omit(list2$listOrder[comp[TF==TRUE]])
data.frame(again, party1, party2, order1, order2)
}
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span && list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
order1 <- na.omit(list1$listOrder[TF==TRUE])
order2 <- na.omit(list2$listOrder[comp[TF==TRUE]])
data.frame(again, party1, party2, order1, order2)
}
listsCompareSK(sk2012, sk2016, 4)
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span && list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
#order1 <- na.omit(list1$listOrder[TF==TRUE])
#order2 <- na.omit(list2$listOrder[comp[TF==TRUE]])
data.frame(again, party1, party2, order1, order2)
}
listsCompareSK(sk2012, sk2016, 4)
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span && list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
#order1 <- na.omit(list1$listOrder[TF==TRUE])
#order2 <- na.omit(list2$listOrder[comp[TF==TRUE]])
data.frame(again, party1, party2)
}
listsCompareSK(sk2012, sk2016, 4)
listsCompareSK(sk2012, sk2016, 5)
listsCompareSK <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span & list1$residency == list2$residency[comp]
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
#order1 <- na.omit(list1$listOrder[TF==TRUE])
#order2 <- na.omit(list2$listOrder[comp[TF==TRUE]])
data.frame(again, party1, party2)
}
listsCompareSK(sk2012, sk2016, 4)
sk1 <- listsCompareSK(sk2012, sk2016, 4)
table(sk1$party1, sk1$party2)
listsCompareSK(sk2012, sk2016, 5)
listsCompareSK(sk2012, sk2016, 3)
View(sk1216_2_2)
View(sk1)
data <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/data.csv")
View(data)
mod1 <- glm(runagain ~ subsidy + candidate + mainstream + ideology + mainstream*ideology, data=data, family="binomial")
mod1 <- glm(runAgain ~ subsidy + candidate + mainstream + ideology + mainstream*ideology, data=data, family="binomial")
summary(mod1)
mod2 <- glm(runAgain ~ subsidy + candidate + mainstream + ideology, data=data, family="binomial")
summary(mod2)
data <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/data.csv")
View(data)
mod3 <- glm(runAgain ~ subsidy + candidate + mainstream + ideology + cz + sk, data=data, family="binomial")
summary(mod3)
mod4 <- glm(runAgain ~ subsidy + candidate + mainstream + ideology + pl, data=data, family="binomial")
summary(mod4)
datapl <- data[data$pl == 1]
datapl <- data[data$pl == 1, ]
modpl <- glm(runAgain ~ subsidy + candidate + mainstream + ideology, data=datapl, family="binomial")
summary(modpl)
datask <- data[data$sk == 1, ]
modsk <- glm(runAgain ~ subsidy + candidate + mainstream + ideology, data=datask, family="binomial")
summary(modsk)
modpl2 <- glm(runAgain ~ subsidy + mainstream + ideology, data=datapl, family="binomial")
summary(modpl2)
datacz <- data[data$cz == 1, ]
modcz <- glm(runAgain ~ subsidy + mainstream + ideology, data=datacz, family="binomial")
summary(modcz)
modcz <- glm(runAgain ~ subsidy + candidates + mainstream + ideology, data=datacz, family="binomial")
modcz <- glm(runAgain ~ subsidy + candidate + mainstream + ideology, data=datacz, family="binomial")
summary(modcz)
mod5 <- glm(runAgain ~ subsidy + mainstream + ideology, data=data, family="binomial")
summary(mod5)
data2 <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/data2.csv")
View(data2)
modpl2 <- glm(runAgain ~ subsidy + mainstream + ideology, data=data2[data2$pl==1], family="binomial")
modpl2 <- glm(runAgain ~ subsidy + mainstream + ideology, data=data2[data2$pl==1, ], family="binomial")
summary(modpl2)
table(sum(data$party), data$year)
table(length(data$party), data$year)
data$party <- as.character(data$party)
table(length(data$party), data$year)
cz92 <- data[cz == 1 & year == 1992, ]
cz92 <- data[data$cz == 1 & data$year == 1992, ]
hist(cz92$votes)
hist(cz92$votes, breaks=10)
cz02 <- data[data$cz == 1 & data$year == 2002, ]
hist(cz02$votes, break=10)
hist(cz02$votes, breaks=10)
table(data$prophet, data$year)
cz <- data[data$cz==1, ]
plot(cz$prophet, year)
plot(cz$prophet, cz$year)
plot(sum(cz$prophet), cz$year)
table(cz$prophet, cz$year)
plot(table(cz$prophet, cz$year))
barplot(table(cz$prophet, cz$year))
barplot(table(cz$prophet[cz$prophet==1], cz$year))
barplot(table(cz$prophet[cz$prophet==1, ], cz$year))
table(cz$newProject, cz$year)
table(cz$purifier, cz$year)
table(cz$proloc, cz$year)
table(data$proloc, data$year, subset(data, cz==1))
?subset
plot(mod5)
mod_ch <- glm(change ~ subsidy + mainstream + ideology, data=data, family="binomial")
summary(mod_ch)
mod_ch <- glm(change ~ subsidy + candidate + mainstream + ideology, data=data, family="binomial")
summary(mod_ch)
data <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/data.csv")
View(data)
mod_ch <- glm(change ~ subsidy + candidate + mainstream + ideology + origShell + origMerge + origSplit, data=data, family="binomial")
summary(mod_ch)
mod_2 <- glm(runAgain ~ subsidy + candidate + mainstream + ideology + origShell + origMerge + origSplit, data=data, family="binomial")
summary(mod_2)
mod_2 <- glm(runAgain ~ subsidy + mainstream + ideology + origShell + origMerge + origSplit, data=data, family="binomial")
summary(mod_2)
logisticPseudoR2 <- function(LogModel) {
dev <- LogModel$deviance
nullDev <- LogModel$null.deviance
modelN <- length(LogModel$fitted.values)
R.l <- 1 - dev/nullDev
R.cs <- 1- exp(-(nullDev - dev)/modelN)
R.n <- R.cs/ (1 - (exp(-(nullDev/modelN))))
cat("Pseudo R^2 for logistic regression\n")
cat("Hosmer and Lemeshow R^2 ", round(R.l, 3), "\n")
cat("Cox and Snell R^2       ", round(R.cs, 3), "\n")
cat("Nagelkerke R^2          ", round(R.n, 3), "\n")
}
logisticPseudoR2(mod_2)
citation()
citation("googleVis")
pred_ch <- predict.glm(mod_ch)
pred_ch
boxplot(pred_ch)
round <- function(list)
{for (i in 1:length(list)) {
if(list[i] > 0.5)
{zkouska[i] <- 1}
else
{zkouska[i] <- 0}
i+1
}
}
pred_ch1 <- round(pred_ch)
round <- function(list)
{for (i in 1:length(list)) {
if(list[i] > 0.5)
{list[i] <- 1}
else
{list[i] <- 0}
i+1
}
}
pred_ch1 <- round(pred_ch)
round <- function(list)
{vektor <- rep(NA, length(list))
for (i in 1:length(list)) {
if(list[i] > 0.5)
{vektor[i] <- 1}
else
{vektor[i] <- 0}
i+1
}
}
pred_ch1 <- round(pred_ch)
round <- function(list)
{vektor <- rep(NA, length(list))
for (i in 1:length(list)) {
if(list[i] > 0.5)
{vektor[i] <- 1}
else
{vektor[i] <- 0}
i+1
}
vektor
}
pred_ch1 <- round(pred_ch)
table(pred_ch1, data$change)
table(pred_ch, na.omit(data$change))
length(data$change)
length(na.omit(data$change))
length(na.omit(data))
length(na.omit(data$change | data$subsidy | data$mainstream | data$ideology | data$origNew))
length(na.omit(data$change | data$subsidy | data$mainstream | data$ideology | data$origNew | data$origShell | data$origMerge | data$origSplit))
View(listsCompare)
function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
mparty1 <- na.omit(list1$membParty[TF==TRUE])
mparty2 <- na.omit(list2$membParty[comp[TF==TRUE]])
data.frame(again, party1, party2, mparty1, mparty2)
#  print("Candidates running again:")
#  print(again[!is.na(again)])
#  print(table(party1, party2))
}
View(cze2010c)
cz1013m <- listsCompare(cze2010c, cze2013c)
cz1013m <- listsCompare(cze2010c, cze2013c, 4)
cz1013m_2 <- listsCompare(cze2010c, cze2013c, 3)
cz1013memb <- rbind(cz1013m, cz1013m_2)
table(cz1013memb$mparty1, cz1013$mparty2)
View(cze2013c)
function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
mparty1 <- na.omit(list1$membParty[TF==TRUE])
mparty2 <- na.omit(list2$membParty[comp[TF==TRUE]])
data.frame(again, party1, party2, mparty1, mparty2)
#  print("Candidates running again:")
#  print(again[!is.na(again)])
#  print(table(party1, party2))
}
cz1013m <- listsCompare(cze2010c, cze2013c, 4)
listsCompareCZ <- function(list1, list2, elect_span) {
comp <- match(list1$name, list2$name)
TF <- list1$age == list2$age[comp]-elect_span
again <- na.omit(list2$name[comp[TF==TRUE]])
party1 <- na.omit(list1$nomParty[TF==TRUE])
party2 <- na.omit(list2$nomParty[comp[TF==TRUE]])
mparty1 <- na.omit(list1$membParty[TF==TRUE])
mparty2 <- na.omit(list2$membParty[comp[TF==TRUE]])
data.frame(again, party1, party2, mparty1, mparty2)
#  print("Candidates running again:")
#  print(again[!is.na(again)])
#  print(table(party1, party2))
}
cz1013m <- listsCompareCZ(cze2010c, cze2013c, 4)
cz1013m2 <- listsCompareCZ(cze2010c, cze2013c, 3)
cz1013memb <- rbind(cz1013m, cz1013m2)
table(cz1013memb$mparty1, cz1013memb$mparty2)
table(cz1013memb$party1, cz1013memb$mparty2)
cz0610m1 <- listsCompareCZ(cze2006c, cze2010c, 4)
cz0610m2 <- listsCompareCZ(cze2006c, cze2010c, 3)
cz0610m3 <- listsCompareCZ(cze2006c, cze2010c, 5)
cz0610m <- rbind(cz0610m1, cz0610m2)
table(cz0610m$mparty1, cz0610m$mparty2)
View(cz0610m)
table(cz0610m$mparty2, cz0610m$party2)
table(cze2010c$nomParty, cze2010c$membParty)
table(cze2006c$nomParty, cze2006c$membParty)
table(cze2013c$nomParty, cze2013c$membParty)
table(cze2010c$nomParty, cze2010c$membParty)
table(cze2006c$nomParty, cze2006c$membParty)
table(cze2002c$nomParty, cze2002c$membParty)
table(cze2002$nomParty, cze2002$membParty)
cze2002 <- read.csv("C:/Users/Michal/OneDrive/MA_thesis/data/kandidatky/cze/cze2002.csv", sep=";")
View(cze2002)
table(cze2002$nomParty, cze2002$membParty)
data <- read.csv2("C:/Users/Michal/OneDrive/MA_thesis/data/data.csv")
View(data)
mod <- glm(runAgain ~ subsidy + mainstream + ideology + membCand, data=data, family="binomial")
summary(mod)
mod <- glm(runAgain ~ subsidy + mainstream + ideology + membCand*membShare, data=data, family="binomial")
summary(mod)
mod <- glm(runAgain ~ subsidy + mainstream + ideology + membShare, data=data, family="binomial")
summary(mod)
mod <- glm(runAgain ~ subsidy + mainstream + ideology + membCand, data=data, family="binomial")
summary(mod)
library(pcl)
library(pscl)
install.packages("pscl")
library(pscl)
mod <- glm(runAgain ~ subsidy + mainstream + ideology, data=data, family="binomial")
pR2(mod)
mod2 <- glm(runAgain ~ subsidy + mainstream + ideology + origShell + origMerge + origSplit, data=data, family="binomial")
pR2(mod2)
mod_ch <- glm(change ~ subsidy + candidate + mainstream + ideology + origShell + origMerge + origSplit, data=data, family="binomial")
pR2(mod_ch)
citation("pscl")
library(googleVis)
View(sk1216_1)
plot(sk1216_1$order1, sk1216_1$order2)
sk1216ord <- rbind(sk1216_1, sk1216_2)
write.csv(sk1216ord, "sk1216ord.csv")
sk1216ord <- read.csv("~/sk1216ord.csv", sep=";")
View(sk1216ord)
sk1216ord$select <- sk$party1==sk$party2
sk1216ord$select <- sk1216ord$party1==sk1216ord$party2
sk1216ord$party1 <- as.character(sk1216ord$party1)
sk1216ord$party2 <- as.character(sk1216ord$party2)
sk1216ord$select <- sk1216ord$party1==sk1216ord$party2
library(ggplot2)
p <- ggplot(sk1216ord, aes(x=order1, y=order2))
p + geom_point()
p+geom_point(aes(group=select))
p+geom_point(aes(color=select))
sk1216ord$change <- sk1216ord$order1 - sk1216ord$order2
boxplot(sk1216ord$change ~ sk1216ord$select)
p+geom_point(aes(color=select)) + scale_color_manual(values=c("gray70", "firebrick"))
p+geom_point(aes(color=select)) + labs(color="Change of party")
p+geom_point(aes(color=select)) + labs(color="Did the candidate change the party?")
p+geom_point(aes(color=select)) + labs(color="Did the candidate change the party?") + theme(legend.position="top")
p+geom_point(aes(color=select)) + labs(x="order in 2012", y="order in 2016", color="Did the candidate change the party?") + theme(legend.position="top")
p+geom_point(aes(color=select)) + labs(x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top")
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top")
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(labels=c("Yes", "No"))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(colors=c("red", "green"), labels=c("Yes", "No"))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "green"), labels=c("Yes", "No"))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color (values=c("orange", "blue"), labels=c("Yes", "No"))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("orange", "blue"), labels=c("Yes", "No"))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
sk1216ord <- read.csv("~/sk1216ord.csv", sep=";", stringsAsFactors=FALSE)
View(sk1216ord)
?ggplot2
?geom_point
sk1216ord$select <- sk1216ord$party1==sk1216ord$party2
p <- ggplot(sk1216ord, aes(x=order1, y=order2))
p+geom_point(aes(color=select, shape=minor)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
sk1216ord$minor <- as.factor(sk1216ord$minor)
p <- ggplot(sk1216ord, aes(x=order1, y=order2))
p+geom_point(aes(color=select, shape=minor)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
sk26ord_minor <- sk1216ord[sk1216ord$minor==1, ]
p <- ggplot(sk26ord_minor, aes(x=order1, y=order2))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
sk26ord_est <- sk1216ord[sk1216ord$minor==0, ]
p <- ggplot(sk26ord_est, aes(x=order1, y=order2))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
p <- ggplot(sk26ord_minor, aes(x=order1, y=order2))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16, minor parties only", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
sk1216ord <- read.csv("~/sk1216ord.csv", sep=";")
View(sk1216ord)
sk1216ord$select <- sk1216ord$party1==sk1216ord$party2
sk1216ord$party1 <- as.character(sk1216ord$party1)
> sk1216ord$party2 <- as.character(sk1216ord$party2)
> sk1216ord$select <- sk1216ord$party1==sk1216ord$party2
sk1216ord$party2 <- as.character(sk1216ord$party2)
sk1216ord$select <- sk1216ord$party1==sk1216ord$party2
sk26ord_minor <- sk1216ord[sk1216ord$minor==1, ]
sk26ord_est <- sk1216ord[sk1216ord$minor==0, ]
p <- ggplot(sk26ord_minor, aes(x=order1, y=order2))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16, minor parties only", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
p <- ggplot(sk26ord_est, aes(x=order1, y=order2))
p+geom_point(aes(color=select)) + labs(title="Position of candidates in Slovakia, 2012-16, established parties", x="candidate's position in 2012", y="candidate's position in 2016", color="Did the candidate change the party?") + theme(legend.position="top") + scale_color_manual(values=c("red", "black"), labels=c("Yes", "No"))
cor(sk26ord_minor$order1, sk26ord_minor$order2)
cor(sk26ord_est$order1, sk26ord_est$order2)
getwd()
setwd("C:/Users/Michal/Documents/GitHub/ma-thesis")
p <- ggplot(sk26ord_est, aes(x=order1, y=order2))
p+geom_point(aes(color=party1)) + labs(title="Position of candidates in Slovakia, 2012-16, established parties", x="candidate's position in 2012", y="candidate's position in 2016")
p <- ggplot(sk26ord_est, aes(x=order1, y=order2))
p+geom_point(aes(color=party2)) + labs(title="Position of candidates in Slovakia, 2012-16, established parties", x="candidate's position in 2012", y="candidate's position in 2016")
